{"version":3,"sources":["api/project.ts","../node_modules/@icon-park/react/es/icons/More.js","views/project/ProjectList.tsx"],"names":["getProjectList","params","request","url","method","createProject","data","IconWrapper","props","React","createElement","width","size","height","viewBox","fill","cx","cy","r","colors","ProjectList","useState","tableList","setTableList","tableLoading","setTableLoading","pageSize","pagination","useEffect","a","getProjects","pg","color","text","columns","title","dataIndex","render","icon","fallback","src","name","className","to","progress","style","background","team","Group","maxCount","map","id","avatar","key","overlay","Item","trigger","dataSource","loading","rowKey"],"mappings":"mGAAA,gFAEO,SAASA,EAAeC,GAC7B,OAAOC,YAAQ,CACbC,IAAK,gBACLC,OAAQ,MACRH,WAIG,SAASI,EAAcC,GAC5B,OAAOJ,YAAQ,CACbC,IAAK,WACLC,OAAQ,OACRE,W,iCCdJ,4BAEeC,gBAAY,QAAQ,GAAO,SAAUC,GAClD,OAAoBC,IAAMC,cAAc,MAAO,CAC7CC,MAAOH,EAAMI,KACbC,OAAQL,EAAMI,KACdE,QAAS,YACTC,KAAM,QACQN,IAAMC,cAAc,SAAU,CAC5CM,GAAI,KACJC,GAAI,KACJC,EAAG,IACHH,KAAMP,EAAMW,OAAO,KACJV,IAAMC,cAAc,SAAU,CAC7CM,GAAI,KACJC,GAAI,KACJC,EAAG,IACHH,KAAMP,EAAMW,OAAO,KACJV,IAAMC,cAAc,SAAU,CAC7CM,GAAI,KACJC,GAAI,KACJC,EAAG,IACHH,KAAMP,EAAMW,OAAO,U,6TCfR,SAASC,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAqBJ,mBAAS,CAC5BK,SAAU,IADLC,EAAP,oBAIAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEAEIJ,GAAgB,GAFpB,SAG2BzB,YAAe,IAH1C,gBAGYM,EAHZ,EAGYA,KACRiB,EAAajB,GAJjB,uBAMImB,GAAgB,GANpB,0EADc,uBAAC,WAAD,wBAUdK,KACC,IAEH,IAQMC,EAAK,CACT,EAAG,CAAEC,MAAO,OAAQC,KAAM,sBAC1B,EAAG,CAAED,MAAO,UAAWC,KAAM,sBAC7B,EAAG,CAAED,MAAO,UAAWC,KAAM,4BAC7B,EAAG,CAAED,MAAO,YAAaC,KAAM,uBAG3BC,EAAU,CACd,CACEC,MAAO,IACPC,UAAW,OACXC,OAHF,SAGSC,GACL,OACE,mBACEC,SAAS,oEACT1B,OAAQ,IACR2B,IAAKF,EACL3B,MAAO,QAKf,CACEwB,MAAO,2BACPC,UAAW,OACXC,OAHF,SAGSI,GACL,OACE,cAAC,IAAD,CAAMC,UAAU,UAAUC,GAAG,SAA7B,SACGF,MAKT,CACEN,MAAO,eACPC,UAAW,QAEb,CACED,MAAO,eACPC,UAAW,WACXC,OAHF,SAGSO,GACL,OACE,sBACEF,UAAS,UAAKX,EAAGa,GAAUZ,MAAlB,sBACTa,MAAO,CAAEC,WAAW,cAAD,OAAgBf,EAAGa,GAAUZ,MAA7B,aAFrB,SAIGD,EAAGa,GAAUX,SAKtB,CACEE,MAAO,eACPC,UAAW,OACXC,OAHF,SAGSU,GACL,OACE,kBAAQC,MAAR,CAAcC,SAAU,EAAxB,SACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,OAAb,OACR,mBAAkBjB,MAAOM,EAAzB,SACE,mBAAQD,IAAKY,KADDD,UAQxB,CACEhB,MAAO,eACPkB,IAAK,KACLhB,OAHF,WAII,OACE,mBAAUiB,QA9EhB,8BACE,kBAAMC,KAAN,2BACA,kBAAMA,KAAN,2BACA,kBAAMA,KAAN,8BA2EuCC,QAAS,CAAC,SAA7C,SACE,cAAC,IAAD,CAAMd,UAAU,+BAA+B9B,KAAK,YAO9D,OACE,mCACE,mBACEsB,QAASA,EACTuB,WAAYnC,EACZoC,QAASlC,EACTG,WAAYA,EACZgC,OAAO","file":"static/js/17.12385895.chunk.js","sourcesContent":["import request from '@/utils/axios'\n\nexport function getProjectList(params) {\n  return request({\n    url: '/project/list',\n    method: 'get',\n    params,\n  })\n}\n\nexport function createProject(data) {\n  return request({\n    url: '/project',\n    method: 'post',\n    data,\n  })\n}\n","import React from 'react';\nimport { IconWrapper } from '../runtime';\nexport default IconWrapper('more', false, function (props) {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: props.size,\n    height: props.size,\n    viewBox: \"0 0 48 48\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"24\",\n    r: \"3\",\n    fill: props.colors[0]\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"24\",\n    cy: \"24\",\n    r: \"3\",\n    fill: props.colors[0]\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"36\",\n    cy: \"24\",\n    r: \"3\",\n    fill: props.colors[0]\n  }));\n});","import { More } from '@icon-park/react'\nimport { Avatar, Dropdown, Image, Menu, Table, Tooltip } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { getProjectList } from '@/api/project'\n\nexport default function ProjectList() {\n  const [tableList, setTableList] = useState([])\n  const [tableLoading, setTableLoading] = useState(false)\n  const [pagination] = useState({\n    pageSize: 5,\n  })\n\n  useEffect(() => {\n    async function getProjects() {\n      try {\n        setTableLoading(true)\n        const { data } = await getProjectList({})\n        setTableList(data)\n      } finally {\n        setTableLoading(false)\n      }\n    }\n    getProjects()\n  }, [])\n\n  const dropdownMenu = () => (\n    <Menu>\n      <Menu.Item>查看</Menu.Item>\n      <Menu.Item>编辑</Menu.Item>\n      <Menu.Item>删除</Menu.Item>\n    </Menu>\n  )\n\n  const pg = {\n    0: { color: 'info', text: '规划中' },\n    1: { color: 'primary', text: '实施中' },\n    2: { color: 'warning', text: '交付测试' },\n    3: { color: 'secondary', text: '已完成' },\n  }\n\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'icon',\n      render(icon) {\n        return (\n          <Image\n            fallback=\"https://gitee.com/chinesee/images/raw/master/magic-ui/img_001.png\"\n            height={100}\n            src={icon}\n            width={100}\n          />\n        )\n      },\n    },\n    {\n      title: '项目名称',\n      dataIndex: 'name',\n      render(name) {\n        return (\n          <Link className=\"primary\" to=\"/page1\">\n            {name}\n          </Link>\n        )\n      },\n    },\n    {\n      title: '周期',\n      dataIndex: 'date',\n    },\n    {\n      title: '进度',\n      dataIndex: 'progress',\n      render(progress) {\n        return (\n          <span\n            className={`${pg[progress].color} px-2 py-1 rounded`}\n            style={{ background: `rgba(var(--${pg[progress].color}-light))` }}\n          >\n            {pg[progress].text}\n          </span>\n        )\n      },\n    },\n    {\n      title: '成员',\n      dataIndex: 'team',\n      render(team) {\n        return (\n          <Avatar.Group maxCount={3}>\n            {team.map(({ id, name, avatar }) => (\n              <Tooltip key={id} title={name}>\n                <Avatar src={avatar} />\n              </Tooltip>\n            ))}\n          </Avatar.Group>\n        )\n      },\n    },\n    {\n      title: '操作',\n      key: 'id',\n      render() {\n        return (\n          <Dropdown overlay={dropdownMenu()} trigger={['click']}>\n            <More className=\"text-gray-600 cursor-pointer\" size=\"24\" />\n          </Dropdown>\n        )\n      },\n    },\n  ]\n\n  return (\n    <>\n      <Table\n        columns={columns}\n        dataSource={tableList}\n        loading={tableLoading}\n        pagination={pagination}\n        rowKey=\"id\"\n      />\n    </>\n  )\n}\n"],"sourceRoot":""}