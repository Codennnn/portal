{"version":3,"sources":["api/project.ts","views/project/NewProject.tsx"],"names":["getProjectList","params","request","url","method","createProject","data","NewProject","useState","creating","setCreating","history","useHistory","a","success","push","wrapperCol","md","lg","className","colon","initialValues","type","labelCol","span","name","requiredMark","size","onFinish","values","console","log","createNewProject","Item","label","rules","required","message","placeholder","value","map","Option","TextArea","rows","RangePicker","offset","htmlType","loading","ghost","Panel","header","Group","options"],"mappings":"mGAAA,gFAEO,SAASA,EAAeC,GAC7B,OAAOC,YAAQ,CACbC,IAAK,gBACLC,OAAQ,MACRH,WAIG,SAASI,EAAcC,GAC5B,OAAOJ,YAAQ,CACbC,IAAK,WACLC,OAAQ,OACRE,W,oXCCW,SAASC,IACtB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cAFmB,4CAInC,WAAgCN,GAAhC,SAAAO,EAAA,sEAEIH,GAAY,GAFhB,SAGUL,YAAcC,GAHxB,OAII,IAAQQ,QAAQ,8CAChBH,EAAQI,KAAK,iBALjB,gDAOIL,GAAY,GAPhB,0DAJmC,sBAenC,IAKMM,EAAa,CAAEC,GAAI,GAAIC,GAAI,IAEjC,OACE,qCACE,oBAAIC,UAAU,yBAAd,4CACA,oBACEA,UAAU,0BACVC,OAAO,EACPC,cAAe,CAAEC,KAAM,UACvBC,SAAU,CAAEC,KAAM,GAClBC,KAAK,aACLC,cAAc,EACdC,KAAK,QACLX,WAAYA,EACZY,SAnBW,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GAhBS,oCAiBjCG,CAAiBH,IAQf,UAWE,kBAAMI,KAAN,CACEC,MAAM,2BACNT,KAAK,YACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAHrC,SAKE,mBAAQC,YAAY,6CAApB,SACG,CACC,CAAEJ,MAAO,QAASK,MAAO,SACzB,CAAEL,MAAO,YAAaK,MAAO,eAC7BC,KAAI,gBAAGD,EAAH,EAAGA,MAAOL,EAAV,EAAUA,MAAV,OACJ,kBAAQO,OAAR,CAA2BF,MAAOA,EAAlC,SACGL,GADiBK,UAO1B,kBAAMN,KAAN,CACEC,MAAM,2BACNT,KAAK,OACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAHrC,SAKE,mBAAOC,YAAY,iDAGrB,kBAAML,KAAN,CACEC,MAAM,2BACNT,KAAK,cACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAHrC,SAKE,kBAAOK,SAAP,CAAgBJ,YAAY,6CAAUK,KAAM,MAG9C,kBAAMV,KAAN,CACEC,MAAM,2BACNT,KAAK,OACLU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,+CAHrC,SAKE,kBAAYO,YAAZ,CAAwBjB,KAAK,YAG/B,kBAAMM,KAAN,CAAWjB,WAAU,2BAAOA,GAAP,IAAmB6B,OAAQ,IAAhD,SACE,mBAAQC,SAAS,SAASC,QAAStC,EAAUa,KAAK,UAAlD,wCAKF,mBAAU0B,OAAK,EAAf,SACE,mBAAUC,MAAV,CAAyB9B,UAAU,UAAU+B,OAAO,2BAApD,UACE,kBAAMjB,KAAN,CAAWC,MAAM,2BAAOT,KAAK,KAA7B,SACE,mBAAQa,YAAY,6CAApB,SACE,kBAAQG,OAAR,CAAeF,MAAM,OAArB,sBAGJ,kBAAMN,KAAN,CAAWC,MAAM,2BAAOT,KAAK,OAAOT,WAAYA,EAAhD,SACE,kBAAOmC,MAAP,CACEC,QAAS,CACP,CAAElB,MAAO,eAAMK,MAAO,UACtB,CAAEL,MAAO,eAAMK,MAAO,kBAVV","file":"static/js/19.cd69e99c.chunk.js","sourcesContent":["import request from '@/utils/axios'\n\nexport function getProjectList(params) {\n  return request({\n    url: '/project/list',\n    method: 'get',\n    params,\n  })\n}\n\nexport function createProject(data) {\n  return request({\n    url: '/project',\n    method: 'post',\n    data,\n  })\n}\n","import {\n  Button,\n  Collapse,\n  DatePicker,\n  Form,\n  Input,\n  message,\n  Radio,\n  Select,\n} from 'antd'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { createProject } from '@/api/project'\n\nexport default function NewProject() {\n  const [creating, setCreating] = useState(false)\n  const history = useHistory()\n\n  async function createNewProject(data) {\n    try {\n      setCreating(true)\n      await createProject(data)\n      message.success('已创建一个项目')\n      history.push('/project-grid')\n    } catch {\n      setCreating(false)\n    }\n  }\n\n  const onFinish = (values) => {\n    console.log('Success:', values)\n    createNewProject(values)\n  }\n\n  const wrapperCol = { md: 18, lg: 10 }\n\n  return (\n    <>\n      <h2 className=\"mb-4 text-xl font-bold\">创建新项目</h2>\n      <Form\n        className=\"p-6 bg-white rounded-lg\"\n        colon={false}\n        initialValues={{ type: 'public' }}\n        labelCol={{ span: 2 }}\n        name=\"newProject\"\n        requiredMark={false}\n        size=\"large\"\n        wrapperCol={wrapperCol}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"工作空间\"\n          name=\"workplace\"\n          rules={[{ required: true, message: '请输入工作空间' }]}\n        >\n          <Select placeholder=\"请选择工作空间\">\n            {[\n              { label: 'Magic', value: 'magic' },\n              { label: 'LoveShare', value: 'love_share' },\n            ].map(({ value, label }) => (\n              <Select.Option key={value} value={value}>\n                {label}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          label=\"项目名称\"\n          name=\"name\"\n          rules={[{ required: true, message: '请输入项目名称' }]}\n        >\n          <Input placeholder=\"请输入项目名称\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"项目描述\"\n          name=\"description\"\n          rules={[{ required: true, message: '请填写项目描述' }]}\n        >\n          <Input.TextArea placeholder=\"请填写项目描述\" rows={4} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"项目周期\"\n          name=\"date\"\n          rules={[{ required: true, message: '请确认项目周期' }]}\n        >\n          <DatePicker.RangePicker size=\"large\" />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ ...wrapperCol, offset: 2 }}>\n          <Button htmlType=\"submit\" loading={creating} type=\"primary\">\n            新建项目\n          </Button>\n        </Form.Item>\n\n        <Collapse ghost>\n          <Collapse.Panel key=\"id\" className=\"primary\" header=\"高级设置\">\n            <Form.Item label=\"工作空间\" name=\"aa\">\n              <Select placeholder=\"请选择工作空间\">\n                <Select.Option value=\"jack\">Jack</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"访问权限\" name=\"type\" wrapperCol={wrapperCol}>\n              <Radio.Group\n                options={[\n                  { label: '公开', value: 'public' },\n                  { label: '私有', value: 'private' },\n                ]}\n              />\n            </Form.Item>\n          </Collapse.Panel>\n        </Collapse>\n      </Form>\n    </>\n  )\n}\n"],"sourceRoot":""}